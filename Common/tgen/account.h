/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"

#import "xkcm.h"

enum Gender {
  Gender_MALE = 1,
  Gender_FEMALE = 2
};

@interface AccountInfo : NSObject <NSCoding> {
  NSString * __userId;
  NSString * __email;
  NSString * __mobileNum;
  NSString * __userName;
  NSString * __figureUrl;
  NSString * __account;
  int __gender;

  BOOL __userId_isset;
  BOOL __email_isset;
  BOOL __mobileNum_isset;
  BOOL __userName_isset;
  BOOL __figureUrl_isset;
  BOOL __account_isset;
  BOOL __gender_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, retain, getter=userId, setter=setUserId:) NSString * userId;
@property (nonatomic, retain, getter=email, setter=setEmail:) NSString * email;
@property (nonatomic, retain, getter=mobileNum, setter=setMobileNum:) NSString * mobileNum;
@property (nonatomic, retain, getter=userName, setter=setUserName:) NSString * userName;
@property (nonatomic, retain, getter=figureUrl, setter=setFigureUrl:) NSString * figureUrl;
@property (nonatomic, retain, getter=account, setter=setAccount:) NSString * account;
@property (nonatomic, getter=gender, setter=setGender:) int gender;
#endif

- (id) init;
- (id) initWithUserId: (NSString *) userId email: (NSString *) email mobileNum: (NSString *) mobileNum userName: (NSString *) userName figureUrl: (NSString *) figureUrl account: (NSString *) account gender: (int) gender;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

#if !__has_feature(objc_arc)
- (NSString *) userId;
- (void) setUserId: (NSString *) userId;
#endif
- (BOOL) userIdIsSet;

#if !__has_feature(objc_arc)
- (NSString *) email;
- (void) setEmail: (NSString *) email;
#endif
- (BOOL) emailIsSet;

#if !__has_feature(objc_arc)
- (NSString *) mobileNum;
- (void) setMobileNum: (NSString *) mobileNum;
#endif
- (BOOL) mobileNumIsSet;

#if !__has_feature(objc_arc)
- (NSString *) userName;
- (void) setUserName: (NSString *) userName;
#endif
- (BOOL) userNameIsSet;

#if !__has_feature(objc_arc)
- (NSString *) figureUrl;
- (void) setFigureUrl: (NSString *) figureUrl;
#endif
- (BOOL) figureUrlIsSet;

#if !__has_feature(objc_arc)
- (NSString *) account;
- (void) setAccount: (NSString *) account;
#endif
- (BOOL) accountIsSet;

#if !__has_feature(objc_arc)
- (int) gender;
- (void) setGender: (int) gender;
#endif
- (BOOL) genderIsSet;

@end

@protocol AccountService <NSObject>
- (void) sendVerifyCode: (CommArgs *) commArgs localCode: (NSString *) localCode mobileNumber: (NSString *) mobileNumber;  // throws AuthException *, BizException *, TException
- (void) validateVerifyCode: (CommArgs *) commArgs localCode: (NSString *) localCode mobileNumber: (NSString *) mobileNumber verifyCode: (NSString *) verifyCode;  // throws AuthException *, BizException *, TException
- (AccountInfo *) registerAccount: (CommArgs *) commArgs email: (NSString *) email mobileNum: (NSString *) mobileNum password: (NSString *) password userName: (NSString *) userName account: (NSString *) account gender: (int) gender;  // throws AuthException *, BizException *, TException
- (NSString *) saveAvatar: (CommArgs *) commArgs selfUserId: (NSString *) selfUserId formatType: (NSString *) formatType dataContent: (NSData *) dataContent;  // throws AuthException *, BizException *, TException
- (AccountInfo *) validateAccount: (CommArgs *) commArgs userAccount: (NSString *) userAccount password: (NSString *) password;  // throws AuthException *, BizException *, TException
- (void) editPassword: (CommArgs *) commArgs oldpwd: (NSString *) oldpwd newpwd: (NSString *) newpwd;  // throws AuthException *, BizException *, TException
@end

@interface AccountServiceClient : NSObject <AccountService> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface AccountServiceProcessor : NSObject <TProcessor> {
  id <AccountService> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithAccountService: (id <AccountService>) service;
- (id<AccountService>) service;
@end

@interface accountConstants : NSObject {
}
@end
